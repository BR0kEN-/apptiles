<?php
/**
 * @file
 * Mobile device favicon module.
 *
 * @author Gaydamaka Vladimir <vladimir.gaydamaka@ffwagency.com>
 */

define('MOBILE_DEVICE_FAVICON_MODULE_DIR', drupal_get_path('module', basename(__DIR__)));
define('MOBILE_DEVICE_FAVICON_THEME_NAME', variable_get('theme_default', ''));
define('MOBILE_DEVICE_FAVICON_FAVICON_IMAGE_DIR', drupal_get_path('theme', MOBILE_DEVICE_FAVICON_THEME_NAME) . '/favicon/');
define('MOBILE_DEVICE_FAVICON_FILE_EXTENSION', 'ico');
define('MOBILE_DEVICE_FAVICON_BROWSER_CONFIG_FILE', 'browserconfig.xml');

/**
 * Implements hook_form_system_theme_settings_alter().
 */
function mobile_device_favicon_form_system_theme_settings_alter(&$form, &$form_state) {
  $form['#attached']['css'][] = sprintf('%s/css/%s.css', MOBILE_DEVICE_FAVICON_MODULE_DIR, basename(__DIR__));

  $device_dimensions = _mobile_devices_favicon_get_default_file_list();

  $form['favicon']['mobile_device_favicon'] = array(
    '#type' => 'vertical_tabs',
    '#title' => t('favicon_api settings'),
    '#default_tab' => 'windows',
  );

  foreach (array(
    'windows' => array(
      'title' => t('Windows OS settings'),
    ),
    'apple' => array(
      'title' => t('iOS settings'),
    ),
  ) as $os => $param) {
    $form[$os] = array(
      '#type' => 'fieldset',
      '#title' => $param['title'],
      '#collapsible' => TRUE,
      '#group' => 'mobile_device_favicon',
    );

    $form[$os]['favicon_' . $os . '_full_dimension'] = array(
      '#type' => 'checkbox',
      '#title' => t('Select one file for all dimensions'),
      '#description' => t('Use one file for all dimension'),
      '#default_value' => theme_get_setting('favicon_' . $os . '_full_dimension', MOBILE_DEVICE_FAVICON_THEME_NAME),
    );

    foreach ($device_dimensions[$os] as $title => $dimension) {
      _mobile_devices_favicon_dimension_validate($title, $dimension);

      $form[$os]['favicon_' . $os . '_' . $dimension] = array(
        '#type' => 'checkbox',
        '#title' => t('Exist favicon file with dimension !dimension', array('!dimension' => $dimension)),
        '#description' => t('In the folder "!path" should be located file !title.!extension', array(
          '!path' => MOBILE_DEVICE_FAVICON_FAVICON_IMAGE_DIR,
          '!title' => $title,
          '!extension' => MOBILE_DEVICE_FAVICON_FILE_EXTENSION,
        )),
        '#default_value' => _mobile_devices_favicon_file_exist($title, MOBILE_DEVICE_FAVICON_FILE_EXTENSION),
        '#disabled' => TRUE,
        '#states' => array(
          'invisible' => array(
            'input[name="favicon_' . $os . '_full_dimension"]' => array('checked' => TRUE),
          ),
        ),
        '#attributes' => array(
          'class' => array(
            'dimensions',
            _mobile_devices_favicon_file_exist($title, MOBILE_DEVICE_FAVICON_FILE_EXTENSION) ? 'green' : 'red',
          ),
        ),
      );
    }

    $form[$os]['favicon_' . $os . '_default_file'] = array(
      '#type' => 'managed_file',
      '#title' => t('Upload icon image'),
      '#upload_validators' => array(
        'file_validate_extensions' => array(MOBILE_DEVICE_FAVICON_FILE_EXTENSION, 'png'),
      ),
      '#upload_location' => 'public://',
      '#description' => t('Upload an image'),
      '#states' => array(
        'invisible' => array(
          'input[name="favicon_' . $os . '_full_dimension"]' => array('checked' => FALSE),
        ),
      ),
    );
  }

  return $form;
}

/**
 * Implements hook_html_head_alter().
 */
function mobile_device_favicon_html_head_alter(&$head_elements) {
  $child  = NULL;
  $save_xml = NULL;
  $browser_config = NULL;
  $device_dimensions = _mobile_devices_favicon_get_default_file_list();

  foreach ($device_dimensions as $os => $dimensions) {
    switch ($os) {
      case 'windows':
//        if (NULL == cache_get(__FUNCTION__)) {
//          $browser_config = simplexml_load_file(sprintf('%s/%s', MOBILE_DEVICE_FAVICON_MODULE_DIR, MOBILE_DEVICE_FAVICON_BROWSER_CONFIG_FILE));
//          $tile = $browser_config->msapplication->tile;
//
//          // Generate xml data.
//          foreach ($dimensions as $filename => $dimension) {
//            if (_mobile_devices_favicon_file_exist($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION)) {
//              switch ($dimension) {
//                case '310x150':
//                  $child = $tile->addChild(sprintf('wide%slogo', $dimension));
//                  $child->addAttribute('src', _mobile_devices_favicon_get_file_path($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION));
//                  break;
//
//                default:
//                  $child = $tile->addChild(sprintf('square%slogo', $dimension));
//                  $child->addAttribute('src', _mobile_devices_favicon_get_file_path($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION));
//                  break;
//              }
//            }
//          }
//
//          $save_xml = $browser_config->saveXML(file_create_url('public://' . MOBILE_DEVICE_FAVICON_BROWSER_CONFIG_FILE));
//
//          if (!empty($save_xml)) {
//            cache_set(__FUNCTION__, $dimensions);
//          }
//        }
//
//        if (file_exists(drupal_realpath('public://' . MOBILE_DEVICE_FAVICON_BROWSER_CONFIG_FILE))) {
//          $head_elements['msapplication_config'] = array(
//            '#type' => 'html_tag',
//            '#tag' => 'meta',
//            '#attributes' => array(
//              'name' => 'msapplication-config',
//              'href' => file_create_url('public://' . MOBILE_DEVICE_FAVICON_BROWSER_CONFIG_FILE),
//            ),
//          );
//        }
        break;

      case 'apple':
        foreach ($dimensions as $filename => $dimension) {
          if (_mobile_devices_favicon_file_exist($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION)) {
            $head_elements[$filename] = array(
              '#type' => 'html_tag',
              '#tag' => 'link',
              '#attributes' => array(
                'rel' => 'apple-touch-icon',
                'href' => _mobile_devices_favicon_get_file_path($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION),
                'size' => $dimension,
              ),
            );
          }
        }
        break;
    }
  }
}

/**
 * Validate image dimension.
 *
 * @param string $filename
 *   The name of file.
 * @param string $min_dimensions
 *   The dimension image.
 *
 * @return array
 *   Return error messages.
 */
function _mobile_devices_favicon_dimension_validate($filename, $min_dimensions) {
  $error = array();
  $file = NULL;

  if (_mobile_devices_favicon_file_exist($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION)) {
    $file = file_get_contents(_mobile_devices_favicon_get_file_path($filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION));
    $file = file_save_data($file, sprintf('temporary://%s.%s', $filename, MOBILE_DEVICE_FAVICON_FILE_EXTENSION), FILE_EXISTS_RENAME);
    $error = file_validate_image_resolution($file, 0, $min_dimensions);
    file_delete($file, TRUE);
  }

  return $error;
}

/**
 * Check exist file.
 *
 * @param string $filename
 *   The name of file.
 * @param string $extension
 *   The extension of file.
 *
 * @return bool
 *   Check file.
 */
function _mobile_devices_favicon_file_exist($filename, $extension) {
  return file_exists(sprintf('%s%s.%s', MOBILE_DEVICE_FAVICON_FAVICON_IMAGE_DIR, $filename, $extension));
}

/**
 * Get path to file.
 *
 * @param string $filename
 *   The name of file.
 * @param string $extension
 *   The extension of file.
 *
 * @return string
 *   The path to file.
 */
function _mobile_devices_favicon_get_file_path($filename, $extension) {
  return sprintf('%s%s.%s', MOBILE_DEVICE_FAVICON_FAVICON_IMAGE_DIR, $filename, $extension);
}

/**
 * Get path to files and name device dimensions.
 *
 * @return array
 *   The path to files.
 */
function _mobile_devices_favicon_get_default_file_list() {
  $device_dimensions = array();

  foreach (array(
    '70x70',
    '150x150',
    '310x150',
    '310x310',
  ) as $dimension) {
    $device_dimensions['windows']["mstile_$dimension"] = $dimension;
  }

  foreach (array('ipad_', 'iphone_') as $key => $device) {
    foreach (array(
      'ios7_retina_' => array(
        '120x120',
        '152x152',
      ),
      'retina_' => array(
        '114x114',
        '144x144',
      ),
      'ios7_non_retina_' => array(
        '60x60',
        '76x76',
      ),
      'non_retina_' => array(
        '57x57',
        '72x72',
      ),
    ) as $screen => $dimensions) {
      $device_dimensions['apple'][$device . $screen . $dimensions[$key]] = $dimensions[$key];
    }
  }

  return $device_dimensions;
}
